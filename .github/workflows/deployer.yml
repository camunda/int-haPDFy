# Inspired by https://github.com/hashicorp/learn-terraform-github-actions/blob/main/.github/workflows/terraform.yml
# And https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-google-cloud-platform#updating-your-github-actions-workflow
name: "Deployment"
on:
  push:
    branches: [master, main, live]
  pull_request:
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
env:
  PERFORM_CHANGES: ${{(github.ref == 'refs/heads/master' || github.ref == 'refs/heads/live') && github.event_name == 'push'}}
jobs:
  build:
    name: Build and Publish Docker image
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.push.outputs.Digest}}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build Image
        run: mvn install
      - name: "Authenticate to Google Cloud"
        uses: google-github-actions/auth@v2
        id: auth
        with:
          token_format: "access_token"
          workload_identity_provider: projects/154311673726/locations/global/workloadIdentityPools/github/providers/camunda
          service_account: github-actions@hapdfy.iam.gserviceaccount.com
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "europe-north1-docker.pkg.dev"
      - name: Push image
        id: push
        run: |
          docker push europe-north1-docker.pkg.dev/hapdfy/hapdfy/hapdfy:latest

  terraform:
    name: "Plan/Apply Terraform"
    runs-on: ubuntu-latest
    needs: build
    env:
      # This is a ternary. See https://docs.github.com/en/actions/learn-github-actions/expressions#example
      DIGEST_NAME: ${{github.ref == 'refs/heads/live' && github.event_name == 'push' && 'prod_image_digest' ||  'stage_image_digest' }}
      DIGEST_VALUE: ${{needs.build.outputs.image-digest}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: terraform
      - name: "Authenticate to Google Cloud"
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/154311673726/locations/global/workloadIdentityPools/github/providers/camunda
          service_account: github-actions@hapdfy.iam.gserviceaccount.com
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: terraform
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform
      - name: Extract Current Hashes
        id: create_variables_file
        run: |
          terraform output --json | jq '. | {prod_image_digest,stage_image_digest} | with_entries(.value |= .value) ' | jq --arg NEW_KEY "$DIGEST_NAME" --arg NEW_VALUE "$DIGEST_VALUE" '. |= . + {($NEW_KEY) : $NEW_VALUE}' | tee output.tfvars.json
        working-directory: terraform
      - name: Terraform Plan
        id: plan
        if: ${{!fromJson(env.PERFORM_CHANGES)}}
        run: terraform plan -no-color -input=false -var-file="output.tfvars.json"
        working-directory: terraform
      - name: Terraform Apply
        if: ${{fromJson(env.PERFORM_CHANGES)}}
        run: terraform apply -auto-approve -var-file="output.tfvars.json"
        working-directory: terraform

  notify-on-failure:
    needs: [build, terraform]
    if: ${{ failure() }}  # only runs if there's a failure in the workflow
    runs-on: ubuntu-latest
    steps:
    - name: Send Slack notification
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#internal-apps-alerts'
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_ALERTS }}
